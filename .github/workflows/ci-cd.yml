name: ci-cd

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      default_env:
        description: "Default environment at root (/): production|staging|test"
        required: false
        default: staging

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Unit tests
        run: npm run test:run

      - name: Build production
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          export VITE_BASE_PATH="/${REPO_NAME}/"
          export VITE_ENV_NAME="Production"
          npm run build -- --outDir dist/prod

      - name: Build staging
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          export VITE_BASE_PATH="/${REPO_NAME}/staging/"
          export VITE_ENV_NAME="Staging"
          npm run build -- --outDir dist/staging

      - name: Build test
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          export VITE_BASE_PATH="/${REPO_NAME}/test/"
          export VITE_ENV_NAME="Test"
          npm run build -- --outDir dist/test

      - name: Compose Pages artifact
        run: |
          mkdir -p pages
          rsync -a dist/prod/ pages/
          mkdir -p pages/staging pages/test
          rsync -a dist/staging/ pages/staging/
          rsync -a dist/test/ pages/test/
          REPO_NAME="${{ github.event.repository.name }}"
          # Insert <base> tag into each index.html so relative navigation works reliably on Pages
          PROD_BASE="/${REPO_NAME}/"
          STAGING_BASE="/${REPO_NAME}/staging/"
          TEST_BASE="/${REPO_NAME}/test/"
          for target in pages pages/staging pages/test; do
            if [[ -f "$target/index.html" ]]; then
              BASE_VAR="$PROD_BASE"; [[ "$target" == "pages/staging" ]] && BASE_VAR="$STAGING_BASE"; [[ "$target" == "pages/test" ]] && BASE_VAR="$TEST_BASE";
              # Insert <base> right after the opening <head>
              tmpfile=$(mktemp)
              awk -v base="$BASE_VAR" '{print} NR==1{next} /<head>/ && !done {print "    <base href=\"" base "\">"; done=1}1' "$target/index.html" > "$tmpfile" && mv "$tmpfile" "$target/index.html"
            fi
          done
          # Determine default env for root redirect
          DEFAULT_ENV="${{ github.event.inputs.default_env }}"
          [[ -z "$DEFAULT_ENV" ]] && DEFAULT_ENV=staging
          case "$DEFAULT_ENV" in
            production)
              # keep prod at root; do not overwrite index.html copied from prod
              :
              ;;
            staging)
              echo "<!doctype html><meta http-equiv=\"refresh\" content=\"0; url=/${REPO_NAME}/staging/\">" > pages/index.html
              ;;
            test)
              echo "<!doctype html><meta http-equiv=\"refresh\" content=\"0; url=/${REPO_NAME}/test/\">" > pages/index.html
              ;;
            *)
              echo "<!doctype html><meta http-equiv=\"refresh\" content=\"0; url=/${REPO_NAME}/staging/\">" > pages/index.html
              ;;
          esac
          # Ensure GitHub Pages doesn't run Jekyll and SPA fallback works
          touch pages/.nojekyll
          cp pages/index.html pages/404.html || true
          if [[ -f pages/staging/index.html ]]; then cp pages/staging/index.html pages/staging/404.html; fi
          if [[ -f pages/test/index.html ]]; then cp pages/test/index.html pages/test/404.html; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4


